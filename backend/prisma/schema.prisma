// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enums based on frontend types.ts
enum MainCategory {
  Masculino
  Femenino
  Mixto
}

enum SubCategory {
  Basico
  Intermedio
  Avanzado
}

enum Position {
  Setter
  Libero
  MiddleBlocker
  OutsideHitter
  OppositeHitter
}

enum AttendanceStatus {
  Presente
  Ausente
}

model Player {
  id              String         @id @default(cuid())
  name            String
  document        String         @unique
  address         String
  phone           String
  joinDate        DateTime       @default(now())
  birthDate       DateTime
  avatarUrl       String         @db.Text
  mainCategories  MainCategory[]
  subCategory     SubCategory
  position        Position
  lastPaymentDate DateTime?

  statsHistory StatsRecord[]
  teams        Team[]
  attendances  Attendance[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model StatsRecord {
  id        String   @id @default(cuid())
  date      DateTime
  stats     Json // Corresponds to PlayerStats { attack: number, defense: number, block: number, pass: number }

  player   Player @relation(fields: [playerId], references: [id], onDelete: Cascade)
  playerId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Team {
  id                 String      @id @default(cuid())
  name               String      @unique
  mainCategory       MainCategory
  subCategory        SubCategory
  tournament         String?
  tournamentPosition String?

  players Player[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Attendance {
  playerId String
  date     DateTime
  status   AttendanceStatus

  player Player @relation(fields: [playerId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([playerId, date])
}

model ClubSettings {
  id                    Int     @id @default(1)
  name                  String
  logoUrl               String  @db.Text
  teamCreationEnabled   Boolean
  monthlyPaymentEnabled Boolean

  // Colors
  primaryColor       String
  secondaryColor     String
  tertiaryColor      String
  backgroundColor    String
  surfaceColor       String
  textPrimaryColor   String
  textSecondaryColor String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
